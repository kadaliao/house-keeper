# 主开发环境配置文件
# 使用命令：docker-compose up

# 引用优化后的配置文件
include:
  - docker-compose-config/base.yml
  - docker-compose-config/dev.yml

services:
  backend:
    build: 
      context: ./backend
      target: development
    volumes:
      - ./backend:/app
      # 排除虚拟环境目录，避免性能问题
      - /app/venv
      - /app/__pycache__
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      # 确保数据库连接正确
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/house_keeper
      # 允许前端访问
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://frontend:3000"]
      # 添加Python路径，确保可以找到app模块
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - app-network
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      # 排除node_modules，避免性能问题
      - /app/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    networks:
      - app-network
    command: npm start
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=house_keeper
    ports:
      - "5432:5432"
    networks:
      - app-network
    # 健康检查
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 添加pgAdmin用于数据库管理（可选）
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 